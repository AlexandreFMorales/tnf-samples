{
  "culture": "en",
  "texts": {
    "InvalidParameter": "Invalid parameter: {0}",

    "PresidentZipCodeMustHaveValue": "A president must have a Zip Code",
    "PresidentNameMustHaveValue": "A president must have a Name",
    "PresidentAddressComplementMustHaveValue": "A president must have a address complement",
    "PresidentAddressNumberMustHaveValue": "A president must have a address number",
    "PresidentAddressMustHaveValue": "A president must have a address",
    "CouldNotFindPresident": "Could not find President",
    "GetAllPresident": "Error fetching Presidents",
    "GetPresident": "Error fetching President",
    "PostPresident": "Error salving President",
    "PutPresident": "Error updating President",
    "DeletePresident": "Error deleting President",

    "ProfessionalAddressComplementMustHaveValue": "A professional must have a address complement",
    "ProfessionalAddressNumberMustHaveValue": "A professional must have a address number",
    "ProfessionalAddressMustHaveValue": "A professional must have a address",
    "ProfessionalEmailMustHaveValue": "A professional must have a email",
    "ProfessionalNameMustHaveValue": "A professional must have a name",
    "ProfessionalPhoneMustHaveValue": "A professional must have a phone",
    "ProfessionalZipCodeMustHaveValue": "A professional must have a zip code",
    "CouldNotFindProfessional": "Could not find Professional",
    "GetAllProfessional": "Error fetching Professionals",
    "GetProfessional": "Error fetching Professional",
    "PostProfessional": "Error salving Professional",
    "PutProfessional": "Error updating Professional",
    "DeleteProfessional": "Error deleting Professional",

    "SpecialtyDescriptionMustHaveValue": "A specialty must have a description",
    "CouldNotFindSpecialty": "Could not find Specialty",
    "GetAllSpecialty": "Error fetching Specialties",
    "GetSpecialty": "Error fetching Specialty",
    "PostSpecialty": "Error salving Specialty",
    "PutSpecialty": "Error updating Specialty",
    "DeleteSpecialty": "Error deleting Specialty",

    "PersonNameMustHaveValue": "A person must have a name",
    "GetAllPerson": "Error fetching People",
    "GetPerson": "Error fetching Person",
    "PostPerson": "Error salving Person",
    "PutPerson": "Error updating Person",
    "DeletePerson": "Error deleting Person",

    "CountryNameMustHaveValue": "A country must have a name",
    "CouldNotFindCountry": "Could not find Country",
    "GetAllCountry": "Error fetching Countries",
    "GetCountry": "Error fetching Country",
    "PostCountry": "Error salving Country",
    "PutCountry": "Error updating Country",
    "DeleteCountry": "Error deleting Country"
  }
}